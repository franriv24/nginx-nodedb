services:
  app:
    build:
      context: ./app
    container_name: app
    volumes:
      - ./app:/usr/src/app
    tty: true
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - node-network
    environment:
      - MYSQL_HOST=db
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_DATABASE=testdb

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8080:80"
    tty: true
    depends_on:
      - app
    networks:
      - node-network

  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    environment:
      MYSQL_DATABASE: testdb
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    tty: true
    volumes:
      - ./mysql:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - node-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

networks: 
  node-network:
    driver: bridge